"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = void 0;
const AWS = require("aws-sdk");
const fs = require("fs");
const REQUIRED_ENVS = [
    "BUCKET"
];
exports.handler = async (event) => {
    console.info("EVENT", event);
    const missing = REQUIRED_ENVS.filter(envName => !process.env[envName]);
    if (missing.length) {
        throw new Error(`Missing environment variables: ${missing.join(', ')}`);
    }
    const objectKey = `test-file-${new Date()}.png`;
    try {
        const s3 = new AWS.S3();
        const file = fs.readFileSync("./example.png");
        await s3.upload({
            // @ts-ignore
            Bucket: process.env.BUCKET,
            Key: objectKey,
            Body: file
        }).promise();
        return { "actSuccess": true, "testObjectKey": objectKey };
    }
    catch (e) {
        console.error(e);
        return {
            "actSuccess": false,
            "errorMessage": "failed to put object",
        };
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwrQkFBOEI7QUFDOUIseUJBQXdCO0FBRXhCLE1BQU0sYUFBYSxHQUFHO0lBQ2xCLFFBQVE7Q0FDWCxDQUFBO0FBRVksUUFBQSxPQUFPLEdBQUcsS0FBSyxFQUFFLEtBQVUsRUFBRSxFQUFFO0lBQ3hDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFBO0lBQzVCLE1BQU0sT0FBTyxHQUFHLGFBQWEsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQTtJQUN0RSxJQUFJLE9BQU8sQ0FBQyxNQUFNLEVBQUU7UUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FBQyxrQ0FBa0MsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUE7S0FDMUU7SUFDRCxNQUFNLFNBQVMsR0FBRyxhQUFhLElBQUksSUFBSSxFQUFFLE1BQU0sQ0FBQTtJQUUvQyxJQUFJO1FBQ0EsTUFBTSxFQUFFLEdBQUcsSUFBSSxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUM7UUFDeEIsTUFBTSxJQUFJLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsQ0FBQTtRQUM3QyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUM7WUFDWixhQUFhO1lBQ2IsTUFBTSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTTtZQUMxQixHQUFHLEVBQUUsU0FBUztZQUNkLElBQUksRUFBRSxJQUFJO1NBQ2IsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFBO1FBQ1osT0FBTyxFQUFDLFlBQVksRUFBRSxJQUFJLEVBQUUsZUFBZSxFQUFFLFNBQVMsRUFBQyxDQUFBO0tBQzFEO0lBQUMsT0FBTyxDQUFDLEVBQUU7UUFDUixPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFBO1FBQ2hCLE9BQU87WUFDSCxZQUFZLEVBQUUsS0FBSztZQUNuQixjQUFjLEVBQUUsc0JBQXNCO1NBQ3pDLENBQUE7S0FDSjtBQUNMLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFXUyBmcm9tIFwiYXdzLXNka1wiXG5pbXBvcnQgKiBhcyBmcyBmcm9tIFwiZnNcIlxuXG5jb25zdCBSRVFVSVJFRF9FTlZTID0gW1xuICAgIFwiQlVDS0VUXCJcbl1cblxuZXhwb3J0IGNvbnN0IGhhbmRsZXIgPSBhc3luYyAoZXZlbnQ6IGFueSkgPT4ge1xuICAgIGNvbnNvbGUuaW5mbyhcIkVWRU5UXCIsIGV2ZW50KVxuICAgIGNvbnN0IG1pc3NpbmcgPSBSRVFVSVJFRF9FTlZTLmZpbHRlcihlbnZOYW1lID0+ICFwcm9jZXNzLmVudltlbnZOYW1lXSlcbiAgICBpZiAobWlzc2luZy5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBNaXNzaW5nIGVudmlyb25tZW50IHZhcmlhYmxlczogJHttaXNzaW5nLmpvaW4oJywgJyl9YClcbiAgICB9XG4gICAgY29uc3Qgb2JqZWN0S2V5ID0gYHRlc3QtZmlsZS0ke25ldyBEYXRlKCl9LnBuZ2BcblxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHMzID0gbmV3IEFXUy5TMygpO1xuICAgICAgICBjb25zdCBmaWxlID0gZnMucmVhZEZpbGVTeW5jKFwiLi9leGFtcGxlLnBuZ1wiKVxuICAgICAgICBhd2FpdCBzMy51cGxvYWQoe1xuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgQnVja2V0OiBwcm9jZXNzLmVudi5CVUNLRVQsXG4gICAgICAgICAgICBLZXk6IG9iamVjdEtleSxcbiAgICAgICAgICAgIEJvZHk6IGZpbGVcbiAgICAgICAgfSkucHJvbWlzZSgpXG4gICAgICAgIHJldHVybiB7XCJhY3RTdWNjZXNzXCI6IHRydWUsIFwidGVzdE9iamVjdEtleVwiOiBvYmplY3RLZXl9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGUpXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBcImFjdFN1Y2Nlc3NcIjogZmFsc2UsXG4gICAgICAgICAgICBcImVycm9yTWVzc2FnZVwiOiBcImZhaWxlZCB0byBwdXQgb2JqZWN0XCIsXG4gICAgICAgIH1cbiAgICB9XG59Il19